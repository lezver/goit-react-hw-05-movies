{"version":3,"file":"static/js/312.66419a46.chunk.js","mappings":"wQA8CA,EAxCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACOC,EAAAA,EAAAA,IAAQJ,GADf,cACVK,EADU,yBAGTN,GAAQ,OAAIM,EAASC,KAAKR,QAHjB,2CAAH,qDAMfK,GACD,GAAE,KAGD,8BACGL,EAAKS,QACJ,eAAIC,UAAU,OAAd,SACGV,EAAKW,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBACEC,IACED,EAAY,yCAC0BA,GAClC,+FAENE,IAAKJ,KAEP,wBAAKA,KACL,0BAAOC,MAVAX,EADD,OAgBZ,wBAAI,mCAIX,C,iNCzCKe,EAAU,2CACVC,EAAW,gCAEJC,EAAW,mCAAG,2FACrBZ,EAAW,GADU,kBAINa,EAAAA,EAAAA,IAAA,UACZF,EADY,2CAC+BD,IALzB,OAIvBV,EAJuB,uDAQvBc,IAAAA,OAAAA,QAAwB,iDACxBC,QAAQC,IAAR,MATuB,iCAYlBhB,GAZkB,yDAAH,qDAeXiB,EAAe,mCAAG,WAAMtB,GAAN,8EACzBK,EAAW,GADc,kBAIVa,EAAAA,EAAAA,IAAA,UACZF,EADY,iBACKhB,EADL,2BAC0Be,IALhB,OAI3BV,EAJ2B,uDAQ3Bc,IAAAA,OAAAA,QAAwB,iDACxBC,QAAQC,IAAR,MAT2B,iCAYtBhB,GAZsB,yDAAH,sDAefkB,EAAe,mCAAG,WAAMC,GAAN,8EACzBnB,EAAW,GADc,kBAIVa,EAAAA,EAAAA,IAAA,UACZF,EADY,8BACkBQ,EADlB,sDACqET,IAL3D,OAI3BV,EAJ2B,uDAQ3Bc,IAAAA,OAAAA,QAAwB,iDACxBC,QAAQC,IAAR,MAT2B,iCAYtBhB,GAZsB,yDAAH,sDAefD,EAAO,mCAAG,WAAMJ,GAAN,8EACjBK,EAAW,GADM,kBAIFa,EAAAA,EAAAA,IAAA,UACZF,EADY,iBACKhB,EADL,mCACkCe,IALhC,OAInBV,EAJmB,uDAQnBc,IAAAA,OAAAA,QAAwB,iDACxBC,QAAQC,IAAR,MATmB,iCAYdhB,GAZc,yDAAH,sDAcPoB,EAAU,mCAAG,WAAMzB,GAAN,8EACpBK,EAAW,GADS,kBAILa,EAAAA,EAAAA,IAAA,UACZF,EADY,iBACKhB,EADL,0CACyCe,IALpC,OAItBV,EAJsB,uDAQtBc,IAAAA,OAAAA,QAAwB,iDACxBC,QAAQC,IAAR,MATsB,iCAYjBhB,GAZiB,yDAAH,qD","sources":["components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import { getCast } from 'services/Api';\nimport { useParams } from 'react-router-dom';\n\nimport './Cast.scss';\nimport { useEffect, useState } from 'react';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const response = await getCast(id);\n\n      return setCast([...response.data.cast]);\n    };\n\n    fetchCast(); // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {cast.length ? (\n        <ul className=\"cast\">\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://img.freepik.com/premium-vector/account-icon-user-icon-vector-graphics_292645-552.jpg'\n                }\n                alt={name}\n              />\n              <h3>{name}</h3>\n              <span>{character}</span>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>Sorry, we have no cast yet...</h3>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = 'api_key=069f0096f83b6d4377da260a7888cd6d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTranding = async () => {\n  let response = '';\n\n  try {\n    response = await axios.get(\n      `${BASE_URL}trending/all/day?language=en-US&${API_KEY}`\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... Something's wron... try again later:)\");\n    console.log(error);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  let response = '';\n\n  try {\n    response = await axios.get(\n      `${BASE_URL}movie/${id}?language=en-US&${API_KEY}`\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... Something's wron... try again later:)\");\n    console.log(error);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async movie => {\n  let response = '';\n\n  try {\n    response = await axios.get(\n      `${BASE_URL}search/movie?query=${movie}&include_adult=false&language=en-US&page=1&${API_KEY}`\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... Something's wron... try again later:)\");\n    console.log(error);\n  }\n\n  return response;\n};\n\nexport const getCast = async id => {\n  let response = '';\n\n  try {\n    response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... Something's wron... try again later:)\");\n    console.log(error);\n  }\n\n  return response;\n};\nexport const getReviews = async id => {\n  let response = '';\n\n  try {\n    response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... Something's wron... try again later:)\");\n    console.log(error);\n  }\n\n  return response;\n};\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","getCast","response","data","length","className","map","name","character","profile_path","src","alt","API_KEY","BASE_URL","getTranding","axios","Notiflix","console","log","getMovieDetails","getSearchMovies","movie","getReviews"],"sourceRoot":""}